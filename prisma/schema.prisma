// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // directUrl    = env("DIRECT_URL")
}

model Plan {
  id         Int       @id @default(autoincrement())
  created_at DateTime  @default(now())
  updated_at DateTime  @default(now()) @updatedAt
  owner      String?
  target     String?
  content    String?
  key_result String?
  is_done    Boolean   @default(false)
  is_star    Boolean   @default(false)
  deadline   DateTime?
}

model Chat {
  id         Int       @id @default(autoincrement())
  created_at DateTime  @default(now())
  updated_at DateTime  @default(now()) @updatedAt
  owner      String    @unique
  messages   Message[]

  @@index([owner])
}

enum Sender {
  USER
  ASSISTANT
}

model Message {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
  sender     Sender
  text       String?
  chat       Chat     @relation(fields: [chatId], references: [id])
  chatId     Int

  @@index([chatId])
}

model Notebook {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
  owner      String
  word_index Int
}
